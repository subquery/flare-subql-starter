specVersion: "1.0.0"
name: "songbird-starter"
version: "0.0.1"
runner:
  node:
    name: "@subql/node-flare"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: "This project can be use as a starting point for developing your new Flare Songbird SubQuery project"
repository: "https://github.com/subquery/flare-starter"

schema:
  file: "./schema.graphql"

network:
  # chainId is the EVM Chain ID, for Flare Songbird this is 19
  # https://chainlist.org/chain/19
  chainId: "19"
  # This endpoint must be a public non-pruned archive node
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  # You can get them from Flare's API Portal
  # https://api-portal.flare.network/
  endpoint: https://songbird-api.flare.network/ext/C/rpc
  # Optionally provide the HTTP endpoint of a full chain dictionary to speed up processing
  # dictionary: 

dataSources:
  - kind: flare/Runtime
    startBlock: 2300000
    options:
      # Must be a key of assets
      abi: priceSubmitter
      address: "0x1000000000000000000000000000000000000003"
    assets:
      priceSubmitter:
        file: "priceSubmitter.abi.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        # - handler: handleBlock
        # kind: flare/BlockHander
        - handler: handleTransaction
          kind: flare/TransactionHandler
          filter:
            ## The function can either be the function fragment or signature
            # function: '0x095ea7b3'
            # function: '0x7ff36ab500000000000000000000000000000000000000000000000000000000'
            function: submitHash(uint256 _epochId, bytes32 _hash)
        - handler: handleLog
          kind: flare/LogHandler
          filter:
            topics:
              ## Follows standard log filters https://docs.ethers.io/v5/concepts/events/
              - HashSubmitted(address indexed submitter, uint256 indexed epochId, bytes32 hash, uint256 timestamp)
